"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remark-html";
exports.ids = ["vendor-chunks/remark-html"];
exports.modules = {

/***/ "(rsc)/./node_modules/remark-html/index.js":
/*!*******************************************!*\
  !*** ./node_modules/remark-html/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ remarkHtml)\n/* harmony export */ });\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-html */ \"(rsc)/./node_modules/hast-util-to-html/lib/index.js\");\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"(rsc)/./node_modules/hast-util-sanitize/lib/index.js\");\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"(rsc)/./node_modules/mdast-util-to-hast/lib/index.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast-util-sanitize').Schema} Schema\n *\n * @typedef ExtraOptionsFields\n *   Configuration (optional).\n * @property {boolean|Schema|null} [sanitize]\n *   How to sanitize the output.\n * @property {import('mdast-util-to-hast').Handlers} [handlers={}]\n *   Object mapping mdast nodes to functions handling them.\n *\n * @typedef {import('hast-util-to-html').Options & ExtraOptionsFields} Options\n */\n\n\n\n\n\n/**\n * Plugin to serialize markdown as HTML.\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | [], Root, string>}\n */\nfunction remarkHtml(settings = {}) {\n  const options = {...settings}\n  /** @type {boolean|undefined} */\n  let clean\n\n  if (typeof options.sanitize === 'boolean') {\n    clean = options.sanitize\n    options.sanitize = undefined\n  }\n\n  if (typeof clean !== 'boolean') {\n    clean = true\n  }\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Root, string>}\n   */\n  function compiler(node, file) {\n    const hast = (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, {\n      allowDangerousHtml: !clean,\n      handlers: options.handlers\n    })\n    // @ts-expect-error: assume root.\n    const cleanHast = clean ? (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(hast, options.sanitize) : hast\n    const result = (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__.toHtml)(\n      // @ts-expect-error: assume root.\n      cleanHast,\n      Object.assign({}, options, {allowDangerousHtml: !clean})\n    )\n\n    if (file.extname) {\n      file.extname = '.html'\n    }\n\n    // Add an eof eol.\n    return node &&\n      node.type &&\n      node.type === 'root' &&\n      result &&\n      /[^\\r\\n]/.test(result.charAt(result.length - 1))\n      ? result + '\\n'\n      : result\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkM7QUFDQSxjQUFjLHVDQUF1QyxZQUFZO0FBQ2pFO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RTs7QUFFd0M7QUFDRztBQUNGOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ2UsaUNBQWlDO0FBQ2hELG1CQUFtQjtBQUNuQixhQUFhLG1CQUFtQjtBQUNoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLG1CQUFtQjs7QUFFMUM7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGlCQUFpQiwwREFBTTtBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDREQUFRO0FBQ3RDLG1CQUFtQix5REFBTTtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCLFlBQVksMkJBQTJCO0FBQzdEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra3BsYVxcT25lRHJpdmVcXERlc2t0b3BcXHJlcG90ZXN0XFxtYXJjby1tYXJrZXRpbmctdmlzdWFsLXN0dWRpb1xcbm9kZV9tb2R1bGVzXFxyZW1hcmstaHRtbFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLlJvb3R9IFJvb3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QtdXRpbC1zYW5pdGl6ZScpLlNjaGVtYX0gU2NoZW1hXG4gKlxuICogQHR5cGVkZWYgRXh0cmFPcHRpb25zRmllbGRzXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbnxTY2hlbWF8bnVsbH0gW3Nhbml0aXplXVxuICogICBIb3cgdG8gc2FuaXRpemUgdGhlIG91dHB1dC5cbiAqIEBwcm9wZXJ0eSB7aW1wb3J0KCdtZGFzdC11dGlsLXRvLWhhc3QnKS5IYW5kbGVyc30gW2hhbmRsZXJzPXt9XVxuICogICBPYmplY3QgbWFwcGluZyBtZGFzdCBub2RlcyB0byBmdW5jdGlvbnMgaGFuZGxpbmcgdGhlbS5cbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtdG8taHRtbCcpLk9wdGlvbnMgJiBFeHRyYU9wdGlvbnNGaWVsZHN9IE9wdGlvbnNcbiAqL1xuXG5pbXBvcnQge3RvSHRtbH0gZnJvbSAnaGFzdC11dGlsLXRvLWh0bWwnXG5pbXBvcnQge3Nhbml0aXplfSBmcm9tICdoYXN0LXV0aWwtc2FuaXRpemUnXG5pbXBvcnQge3RvSGFzdH0gZnJvbSAnbWRhc3QtdXRpbC10by1oYXN0J1xuXG4vKipcbiAqIFBsdWdpbiB0byBzZXJpYWxpemUgbWFya2Rvd24gYXMgSFRNTC5cbiAqXG4gKiBAdGhpcyB7aW1wb3J0KCd1bmlmaWVkJykuUHJvY2Vzc29yfVxuICogQHR5cGUge2ltcG9ydCgndW5pZmllZCcpLlBsdWdpbjxbT3B0aW9ucz9dIHwgW10sIFJvb3QsIHN0cmluZz59XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbWFya0h0bWwoc2V0dGluZ3MgPSB7fSkge1xuICBjb25zdCBvcHRpb25zID0gey4uLnNldHRpbmdzfVxuICAvKiogQHR5cGUge2Jvb2xlYW58dW5kZWZpbmVkfSAqL1xuICBsZXQgY2xlYW5cblxuICBpZiAodHlwZW9mIG9wdGlvbnMuc2FuaXRpemUgPT09ICdib29sZWFuJykge1xuICAgIGNsZWFuID0gb3B0aW9ucy5zYW5pdGl6ZVxuICAgIG9wdGlvbnMuc2FuaXRpemUgPSB1bmRlZmluZWRcbiAgfVxuXG4gIGlmICh0eXBlb2YgY2xlYW4gIT09ICdib29sZWFuJykge1xuICAgIGNsZWFuID0gdHJ1ZVxuICB9XG5cbiAgT2JqZWN0LmFzc2lnbih0aGlzLCB7Q29tcGlsZXI6IGNvbXBpbGVyfSlcblxuICAvKipcbiAgICogQHR5cGUge2ltcG9ydCgndW5pZmllZCcpLkNvbXBpbGVyRnVuY3Rpb248Um9vdCwgc3RyaW5nPn1cbiAgICovXG4gIGZ1bmN0aW9uIGNvbXBpbGVyKG5vZGUsIGZpbGUpIHtcbiAgICBjb25zdCBoYXN0ID0gdG9IYXN0KG5vZGUsIHtcbiAgICAgIGFsbG93RGFuZ2Vyb3VzSHRtbDogIWNsZWFuLFxuICAgICAgaGFuZGxlcnM6IG9wdGlvbnMuaGFuZGxlcnNcbiAgICB9KVxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGFzc3VtZSByb290LlxuICAgIGNvbnN0IGNsZWFuSGFzdCA9IGNsZWFuID8gc2FuaXRpemUoaGFzdCwgb3B0aW9ucy5zYW5pdGl6ZSkgOiBoYXN0XG4gICAgY29uc3QgcmVzdWx0ID0gdG9IdG1sKFxuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogYXNzdW1lIHJvb3QuXG4gICAgICBjbGVhbkhhc3QsXG4gICAgICBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLCB7YWxsb3dEYW5nZXJvdXNIdG1sOiAhY2xlYW59KVxuICAgIClcblxuICAgIGlmIChmaWxlLmV4dG5hbWUpIHtcbiAgICAgIGZpbGUuZXh0bmFtZSA9ICcuaHRtbCdcbiAgICB9XG5cbiAgICAvLyBBZGQgYW4gZW9mIGVvbC5cbiAgICByZXR1cm4gbm9kZSAmJlxuICAgICAgbm9kZS50eXBlICYmXG4gICAgICBub2RlLnR5cGUgPT09ICdyb290JyAmJlxuICAgICAgcmVzdWx0ICYmXG4gICAgICAvW15cXHJcXG5dLy50ZXN0KHJlc3VsdC5jaGFyQXQocmVzdWx0Lmxlbmd0aCAtIDEpKVxuICAgICAgPyByZXN1bHQgKyAnXFxuJ1xuICAgICAgOiByZXN1bHRcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/remark-html/index.js\n");

/***/ })

};
;