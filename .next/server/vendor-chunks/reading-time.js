/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reading-time";
exports.ids = ["vendor-chunks/reading-time"];
exports.modules = {

/***/ "(rsc)/./node_modules/reading-time/index.js":
/*!********************************************!*\
  !*** ./node_modules/reading-time/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports[\"default\"] = module.exports = __webpack_require__(/*! ./lib/reading-time */ \"(rsc)/./node_modules/reading-time/lib/reading-time.js\")\nmodule.exports.readingTimeStream = __webpack_require__(/*! ./lib/stream */ \"(rsc)/./node_modules/reading-time/lib/stream.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHlCQUFzQixHQUFHLHVIQUE4QztBQUN2RSw2SEFBMEQiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2twbGFcXE9uZURyaXZlXFxEZXNrdG9wXFxyZXBvdGVzdFxcbWFyY28tbWFya2V0aW5nLXZpc3VhbC1zdHVkaW9cXG5vZGVfbW9kdWxlc1xccmVhZGluZy10aW1lXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9yZWFkaW5nLXRpbWUnKVxubW9kdWxlLmV4cG9ydHMucmVhZGluZ1RpbWVTdHJlYW0gPSByZXF1aXJlKCcuL2xpYi9zdHJlYW0nKVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/reading-time/lib/reading-time.js":
/*!*******************************************************!*\
  !*** ./node_modules/reading-time/lib/reading-time.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n\n\n/**\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n */\n\n/**\n * @param {number} number\n * @param {number[][]} arrayOfRanges\n */\nfunction codeIsInRanges(number, arrayOfRanges) {\n  return arrayOfRanges.some(([lowerBound, upperBound]) =>\n    (lowerBound <= number) && (number <= upperBound)\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isCJK(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  // Help wanted!\n  // This should be good for most cases, but if you find it unsatisfactory\n  // (e.g. some other language where each character should be standalone words),\n  // contributions welcome!\n  return codeIsInRanges(\n    charCode,\n    [\n      // Hiragana (Katakana not included on purpose,\n      // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\n      // If you think Katakana should be included and have solid reasons, improvement is welcomed\n      [0x3040, 0x309f],\n      // CJK Unified ideographs\n      [0x4e00, 0x9fff],\n      // Hangul\n      [0xac00, 0xd7a3],\n      // CJK extensions\n      [0x20000, 0x2ebe0]\n    ]\n  )\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isAnsiWordBound(c) {\n  return ' \\n\\r\\t'.includes(c)\n}\n\n/**\n * @type {WordBoundFunction}\n */\nfunction isPunctuation(c) {\n  if ('string' !== typeof c) {\n    return false\n  }\n  const charCode = c.charCodeAt(0)\n  return codeIsInRanges(\n    charCode,\n    [\n      [0x21, 0x2f],\n      [0x3a, 0x40],\n      [0x5b, 0x60],\n      [0x7b, 0x7e],\n      // CJK Symbols and Punctuation\n      [0x3000, 0x303f],\n      // Full-width ASCII punctuation variants\n      [0xff00, 0xffef]\n    ]\n  )\n}\n\n/**\n * @type {import('reading-time').default}\n */\nfunction readingTime(text, options = {}) {\n  let words = 0, start = 0, end = text.length - 1\n\n  // use provided value if available\n  const wordsPerMinute = options.wordsPerMinute || 200\n\n  // use provided function if available\n  const isWordBound = options.wordBound || isAnsiWordBound\n\n  // fetch bounds\n  while (isWordBound(text[start])) start++\n  while (isWordBound(text[end])) end--\n\n  // Add a trailing word bound to make handling edges more convenient\n  const normalizedText = `${text}\\n`\n\n  // calculate the number of words\n  for (let i = start; i <= end; i++) {\n    // A CJK character is a always word;\n    // A non-word bound followed by a word bound / CJK is the end of a word.\n    if (\n      isCJK(normalizedText[i]) ||\n      (!isWordBound(normalizedText[i]) &&\n        (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))\n      )\n    ) {\n      words++\n    }\n    // In case of CJK followed by punctuations, those characters have to be eaten as well\n    if (isCJK(normalizedText[i])) {\n      while (\n        i <= end &&\n        (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))\n      ) {\n        i++\n      }\n    }\n  }\n\n  // reading time stats\n  const minutes = words / wordsPerMinute\n  // Math.round used to resolve floating point funkyness\n  //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n  const time = Math.round(minutes * 60 * 1000)\n  const displayed = Math.ceil(minutes.toFixed(2))\n\n  return {\n    text: displayed + ' min read',\n    minutes: minutes,\n    time: time,\n    words: words\n  }\n}\n\n/**\n * Export\n */\nmodule.exports = readingTime\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2xpYi9yZWFkaW5nLXRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFWTs7QUFFWjtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsWUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsdUNBQXVDO0FBQ3ZDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0QkFBNEIsS0FBSzs7QUFFakM7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra3BsYVxcT25lRHJpdmVcXERlc2t0b3BcXHJlcG90ZXN0XFxtYXJjby1tYXJrZXRpbmctdmlzdWFsLXN0dWRpb1xcbm9kZV9tb2R1bGVzXFxyZWFkaW5nLXRpbWVcXGxpYlxccmVhZGluZy10aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogcmVhZGluZy10aW1lXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR3J5bWFuIDxuZ3J5bWFuQGdtYWlsLmNvbT5cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3JlYWRpbmctdGltZScpLk9wdGlvbnNbJ3dvcmRCb3VuZCddfSBXb3JkQm91bmRGdW5jdGlvblxuICovXG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bWJlclxuICogQHBhcmFtIHtudW1iZXJbXVtdfSBhcnJheU9mUmFuZ2VzXG4gKi9cbmZ1bmN0aW9uIGNvZGVJc0luUmFuZ2VzKG51bWJlciwgYXJyYXlPZlJhbmdlcykge1xuICByZXR1cm4gYXJyYXlPZlJhbmdlcy5zb21lKChbbG93ZXJCb3VuZCwgdXBwZXJCb3VuZF0pID0+XG4gICAgKGxvd2VyQm91bmQgPD0gbnVtYmVyKSAmJiAobnVtYmVyIDw9IHVwcGVyQm91bmQpXG4gIClcbn1cblxuLyoqXG4gKiBAdHlwZSB7V29yZEJvdW5kRnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIGlzQ0pLKGMpIHtcbiAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgYykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIGNvbnN0IGNoYXJDb2RlID0gYy5jaGFyQ29kZUF0KDApXG4gIC8vIEhlbHAgd2FudGVkIVxuICAvLyBUaGlzIHNob3VsZCBiZSBnb29kIGZvciBtb3N0IGNhc2VzLCBidXQgaWYgeW91IGZpbmQgaXQgdW5zYXRpc2ZhY3RvcnlcbiAgLy8gKGUuZy4gc29tZSBvdGhlciBsYW5ndWFnZSB3aGVyZSBlYWNoIGNoYXJhY3RlciBzaG91bGQgYmUgc3RhbmRhbG9uZSB3b3JkcyksXG4gIC8vIGNvbnRyaWJ1dGlvbnMgd2VsY29tZSFcbiAgcmV0dXJuIGNvZGVJc0luUmFuZ2VzKFxuICAgIGNoYXJDb2RlLFxuICAgIFtcbiAgICAgIC8vIEhpcmFnYW5hIChLYXRha2FuYSBub3QgaW5jbHVkZWQgb24gcHVycG9zZSxcbiAgICAgIC8vIGNvbnRleHQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3J5bWFuL3JlYWRpbmctdGltZS9wdWxsLzM1I2lzc3VlY29tbWVudC04NTMzNjQ1MjYpXG4gICAgICAvLyBJZiB5b3UgdGhpbmsgS2F0YWthbmEgc2hvdWxkIGJlIGluY2x1ZGVkIGFuZCBoYXZlIHNvbGlkIHJlYXNvbnMsIGltcHJvdmVtZW50IGlzIHdlbGNvbWVkXG4gICAgICBbMHgzMDQwLCAweDMwOWZdLFxuICAgICAgLy8gQ0pLIFVuaWZpZWQgaWRlb2dyYXBoc1xuICAgICAgWzB4NGUwMCwgMHg5ZmZmXSxcbiAgICAgIC8vIEhhbmd1bFxuICAgICAgWzB4YWMwMCwgMHhkN2EzXSxcbiAgICAgIC8vIENKSyBleHRlbnNpb25zXG4gICAgICBbMHgyMDAwMCwgMHgyZWJlMF1cbiAgICBdXG4gIClcbn1cblxuLyoqXG4gKiBAdHlwZSB7V29yZEJvdW5kRnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIGlzQW5zaVdvcmRCb3VuZChjKSB7XG4gIHJldHVybiAnIFxcblxcclxcdCcuaW5jbHVkZXMoYylcbn1cblxuLyoqXG4gKiBAdHlwZSB7V29yZEJvdW5kRnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIGlzUHVuY3R1YXRpb24oYykge1xuICBpZiAoJ3N0cmluZycgIT09IHR5cGVvZiBjKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgY29uc3QgY2hhckNvZGUgPSBjLmNoYXJDb2RlQXQoMClcbiAgcmV0dXJuIGNvZGVJc0luUmFuZ2VzKFxuICAgIGNoYXJDb2RlLFxuICAgIFtcbiAgICAgIFsweDIxLCAweDJmXSxcbiAgICAgIFsweDNhLCAweDQwXSxcbiAgICAgIFsweDViLCAweDYwXSxcbiAgICAgIFsweDdiLCAweDdlXSxcbiAgICAgIC8vIENKSyBTeW1ib2xzIGFuZCBQdW5jdHVhdGlvblxuICAgICAgWzB4MzAwMCwgMHgzMDNmXSxcbiAgICAgIC8vIEZ1bGwtd2lkdGggQVNDSUkgcHVuY3R1YXRpb24gdmFyaWFudHNcbiAgICAgIFsweGZmMDAsIDB4ZmZlZl1cbiAgICBdXG4gIClcbn1cblxuLyoqXG4gKiBAdHlwZSB7aW1wb3J0KCdyZWFkaW5nLXRpbWUnKS5kZWZhdWx0fVxuICovXG5mdW5jdGlvbiByZWFkaW5nVGltZSh0ZXh0LCBvcHRpb25zID0ge30pIHtcbiAgbGV0IHdvcmRzID0gMCwgc3RhcnQgPSAwLCBlbmQgPSB0ZXh0Lmxlbmd0aCAtIDFcblxuICAvLyB1c2UgcHJvdmlkZWQgdmFsdWUgaWYgYXZhaWxhYmxlXG4gIGNvbnN0IHdvcmRzUGVyTWludXRlID0gb3B0aW9ucy53b3Jkc1Blck1pbnV0ZSB8fCAyMDBcblxuICAvLyB1c2UgcHJvdmlkZWQgZnVuY3Rpb24gaWYgYXZhaWxhYmxlXG4gIGNvbnN0IGlzV29yZEJvdW5kID0gb3B0aW9ucy53b3JkQm91bmQgfHwgaXNBbnNpV29yZEJvdW5kXG5cbiAgLy8gZmV0Y2ggYm91bmRzXG4gIHdoaWxlIChpc1dvcmRCb3VuZCh0ZXh0W3N0YXJ0XSkpIHN0YXJ0KytcbiAgd2hpbGUgKGlzV29yZEJvdW5kKHRleHRbZW5kXSkpIGVuZC0tXG5cbiAgLy8gQWRkIGEgdHJhaWxpbmcgd29yZCBib3VuZCB0byBtYWtlIGhhbmRsaW5nIGVkZ2VzIG1vcmUgY29udmVuaWVudFxuICBjb25zdCBub3JtYWxpemVkVGV4dCA9IGAke3RleHR9XFxuYFxuXG4gIC8vIGNhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIHdvcmRzXG4gIGZvciAobGV0IGkgPSBzdGFydDsgaSA8PSBlbmQ7IGkrKykge1xuICAgIC8vIEEgQ0pLIGNoYXJhY3RlciBpcyBhIGFsd2F5cyB3b3JkO1xuICAgIC8vIEEgbm9uLXdvcmQgYm91bmQgZm9sbG93ZWQgYnkgYSB3b3JkIGJvdW5kIC8gQ0pLIGlzIHRoZSBlbmQgb2YgYSB3b3JkLlxuICAgIGlmIChcbiAgICAgIGlzQ0pLKG5vcm1hbGl6ZWRUZXh0W2ldKSB8fFxuICAgICAgKCFpc1dvcmRCb3VuZChub3JtYWxpemVkVGV4dFtpXSkgJiZcbiAgICAgICAgKGlzV29yZEJvdW5kKG5vcm1hbGl6ZWRUZXh0W2kgKyAxXSkgfHwgaXNDSksobm9ybWFsaXplZFRleHRbaSArIDFdKSlcbiAgICAgIClcbiAgICApIHtcbiAgICAgIHdvcmRzKytcbiAgICB9XG4gICAgLy8gSW4gY2FzZSBvZiBDSksgZm9sbG93ZWQgYnkgcHVuY3R1YXRpb25zLCB0aG9zZSBjaGFyYWN0ZXJzIGhhdmUgdG8gYmUgZWF0ZW4gYXMgd2VsbFxuICAgIGlmIChpc0NKSyhub3JtYWxpemVkVGV4dFtpXSkpIHtcbiAgICAgIHdoaWxlIChcbiAgICAgICAgaSA8PSBlbmQgJiZcbiAgICAgICAgKGlzUHVuY3R1YXRpb24obm9ybWFsaXplZFRleHRbaSArIDFdKSB8fCBpc1dvcmRCb3VuZChub3JtYWxpemVkVGV4dFtpICsgMV0pKVxuICAgICAgKSB7XG4gICAgICAgIGkrK1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIHJlYWRpbmcgdGltZSBzdGF0c1xuICBjb25zdCBtaW51dGVzID0gd29yZHMgLyB3b3Jkc1Blck1pbnV0ZVxuICAvLyBNYXRoLnJvdW5kIHVzZWQgdG8gcmVzb2x2ZSBmbG9hdGluZyBwb2ludCBmdW5reW5lc3NcbiAgLy8gICBodHRwOi8vZG9jcy5vcmFjbGUuY29tL2NkL0UxOTk1Ny0wMS84MDYtMzU2OC9uY2dfZ29sZGJlcmcuaHRtbFxuICBjb25zdCB0aW1lID0gTWF0aC5yb3VuZChtaW51dGVzICogNjAgKiAxMDAwKVxuICBjb25zdCBkaXNwbGF5ZWQgPSBNYXRoLmNlaWwobWludXRlcy50b0ZpeGVkKDIpKVxuXG4gIHJldHVybiB7XG4gICAgdGV4dDogZGlzcGxheWVkICsgJyBtaW4gcmVhZCcsXG4gICAgbWludXRlczogbWludXRlcyxcbiAgICB0aW1lOiB0aW1lLFxuICAgIHdvcmRzOiB3b3Jkc1xuICB9XG59XG5cbi8qKlxuICogRXhwb3J0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcmVhZGluZ1RpbWVcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/lib/reading-time.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/reading-time/lib/stream.js":
/*!*************************************************!*\
  !*** ./node_modules/reading-time/lib/stream.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n */\nconst readingTime = __webpack_require__(/*! ./reading-time */ \"(rsc)/./node_modules/reading-time/lib/reading-time.js\")\nconst Transform = (__webpack_require__(/*! stream */ \"stream\").Transform)\nconst util = __webpack_require__(/*! util */ \"util\")\n\n/**\n * @typedef {import('reading-time').Options} Options\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\n * @typedef {import('reading-time').readingTimeStream} ReadingTimeStream\n * @typedef {import('stream').TransformCallback} TransformCallback\n */\n\n/**\n * @param {Options} options\n * @returns {ReadingTimeStream}\n */\nfunction ReadingTimeStream(options) {\n  // allow use without new\n  if (!(this instanceof ReadingTimeStream)) {\n    return new ReadingTimeStream(options)\n  }\n\n  Transform.call(this, { objectMode: true })\n\n  this.options = options || {}\n  this.stats = {\n    minutes: 0,\n    time: 0,\n    words: 0\n  }\n}\nutil.inherits(ReadingTimeStream, Transform)\n\n/**\n * @param {Buffer} chunk\n * @param {BufferEncoding} encoding\n * @param {TransformCallback} callback\n */\nReadingTimeStream.prototype._transform = function(chunk, encoding, callback) {\n  const stats = readingTime(chunk.toString(encoding), this.options)\n\n  this.stats.minutes += stats.minutes\n  this.stats.time += stats.time\n  this.stats.words += stats.words\n\n  callback()\n}\n\n/**\n * @param {TransformCallback} callback\n */\nReadingTimeStream.prototype._flush = function(callback) {\n  this.stats.text = Math.ceil(this.stats.minutes.toFixed(2)) + ' min read'\n\n  this.push(this.stats)\n  callback()\n}\n\n/**\n * Export\n */\nmodule.exports = ReadingTimeStream\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhZGluZy10aW1lL2xpYi9zdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyw2RUFBZ0I7QUFDNUMsa0JBQWtCLHVEQUEyQjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsa0JBQU07O0FBRTNCO0FBQ0EsYUFBYSxnQ0FBZ0M7QUFDN0MsYUFBYSw2Q0FBNkM7QUFDMUQsYUFBYSwwQ0FBMEM7QUFDdkQsYUFBYSxvQ0FBb0M7QUFDakQ7O0FBRUE7QUFDQSxXQUFXLFNBQVM7QUFDcEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsa0JBQWtCOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2twbGFcXE9uZURyaXZlXFxEZXNrdG9wXFxyZXBvdGVzdFxcbWFyY28tbWFya2V0aW5nLXZpc3VhbC1zdHVkaW9cXG5vZGVfbW9kdWxlc1xccmVhZGluZy10aW1lXFxsaWJcXHN0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIHJlYWRpbmctdGltZVxuICogQ29weXJpZ2h0IChjKSBOaWNvbGFzIEdyeW1hbiA8bmdyeW1hbkBnbWFpbC5jb20+XG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5jb25zdCByZWFkaW5nVGltZSA9IHJlcXVpcmUoJy4vcmVhZGluZy10aW1lJylcbmNvbnN0IFRyYW5zZm9ybSA9IHJlcXVpcmUoJ3N0cmVhbScpLlRyYW5zZm9ybVxuY29uc3QgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3JlYWRpbmctdGltZScpLk9wdGlvbnN9IE9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3JlYWRpbmctdGltZScpLk9wdGlvbnNbJ3dvcmRCb3VuZCddfSBXb3JkQm91bmRGdW5jdGlvblxuICogQHR5cGVkZWYge2ltcG9ydCgncmVhZGluZy10aW1lJykucmVhZGluZ1RpbWVTdHJlYW19IFJlYWRpbmdUaW1lU3RyZWFtXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdzdHJlYW0nKS5UcmFuc2Zvcm1DYWxsYmFja30gVHJhbnNmb3JtQ2FsbGJhY2tcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7T3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1JlYWRpbmdUaW1lU3RyZWFtfVxuICovXG5mdW5jdGlvbiBSZWFkaW5nVGltZVN0cmVhbShvcHRpb25zKSB7XG4gIC8vIGFsbG93IHVzZSB3aXRob3V0IG5ld1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUmVhZGluZ1RpbWVTdHJlYW0pKSB7XG4gICAgcmV0dXJuIG5ldyBSZWFkaW5nVGltZVN0cmVhbShvcHRpb25zKVxuICB9XG5cbiAgVHJhbnNmb3JtLmNhbGwodGhpcywgeyBvYmplY3RNb2RlOiB0cnVlIH0pXG5cbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuICB0aGlzLnN0YXRzID0ge1xuICAgIG1pbnV0ZXM6IDAsXG4gICAgdGltZTogMCxcbiAgICB3b3JkczogMFxuICB9XG59XG51dGlsLmluaGVyaXRzKFJlYWRpbmdUaW1lU3RyZWFtLCBUcmFuc2Zvcm0pXG5cbi8qKlxuICogQHBhcmFtIHtCdWZmZXJ9IGNodW5rXG4gKiBAcGFyYW0ge0J1ZmZlckVuY29kaW5nfSBlbmNvZGluZ1xuICogQHBhcmFtIHtUcmFuc2Zvcm1DYWxsYmFja30gY2FsbGJhY2tcbiAqL1xuUmVhZGluZ1RpbWVTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IHN0YXRzID0gcmVhZGluZ1RpbWUoY2h1bmsudG9TdHJpbmcoZW5jb2RpbmcpLCB0aGlzLm9wdGlvbnMpXG5cbiAgdGhpcy5zdGF0cy5taW51dGVzICs9IHN0YXRzLm1pbnV0ZXNcbiAgdGhpcy5zdGF0cy50aW1lICs9IHN0YXRzLnRpbWVcbiAgdGhpcy5zdGF0cy53b3JkcyArPSBzdGF0cy53b3Jkc1xuXG4gIGNhbGxiYWNrKClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1RyYW5zZm9ybUNhbGxiYWNrfSBjYWxsYmFja1xuICovXG5SZWFkaW5nVGltZVN0cmVhbS5wcm90b3R5cGUuX2ZsdXNoID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdGhpcy5zdGF0cy50ZXh0ID0gTWF0aC5jZWlsKHRoaXMuc3RhdHMubWludXRlcy50b0ZpeGVkKDIpKSArICcgbWluIHJlYWQnXG5cbiAgdGhpcy5wdXNoKHRoaXMuc3RhdHMpXG4gIGNhbGxiYWNrKClcbn1cblxuLyoqXG4gKiBFeHBvcnRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBSZWFkaW5nVGltZVN0cmVhbVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/reading-time/lib/stream.js\n");

/***/ })

};
;